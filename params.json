{
  "name": "Dreditor",
  "tagline": "A web browser extension for Drupal.org that enhances user experience and functionality.",
  "body": "# [Download the Chrome extension](https://chrome.google.com/webstore/detail/dreditor/dhdpoembhlojpmehepeadblhglloobao)\r\n\r\n## Manual Installation\r\n1. Install [Node.js](https://nodejs.org) - ensure to install the bundled Node Package Manager [npm](https://www.npmjs.com), too.\r\n2. Install [Grunt] by running the following shell command: `npm install -g grunt-cli`\r\n3. Confirm that the Grunt CLI is installed and works: `grunt --version`\r\n4. Clone the Dreditor repository: `git clone https://github.com/dreditor/dreditor.git`\r\n5. Change into the new repository directory and install all dependencies: `cd dreditor`, `npm install`, `grunt install`\r\n6. Start a first Dreditor build by running: `grunt`\r\n7. Go to `chrome://extensions`\r\n8. Enable *Developer mode*\r\n9. Click on *Load unpacked extension...*\r\n10. Browse to the `/build/chrome` directory and click `Select`\r\n11. Manually refresh the extensions page after each code change\r\n\r\n## Features\r\n\r\n### Patch reviewer\r\nInjects a \"Review\" button for all .patch file attachments on drupal.org. Opens the patch file with diff syntax highlighting (removed/added/control lines) and minimal PHP syntax highlighting (comments), and allows to comment on it.\r\n\r\n- Select lines in the diff to enter a patch review comment. Select further lines if the same comment pertains to other lines as well. Press \"Save\" to store a comment.\r\n- Click on existing selections to edit a comment or select further lines. Press \"Delete\" to delete an existing comment.\r\n- Press \"Hide deletions\" to only see the final resulting lines; useful to remove noise when reviewing complex code logic.\r\n- Press \"Hide\" to temporarily read the issue, retaining your patch review comments.\r\n- Press \"Paste\" to insert all comments including selected lines into the issue.\r\n- Use the jump menu in the sidebar to quickly jump to individual files or hunks in files.\r\n\r\n### Auto-completion\r\nPressing the TAB key after certain character sequences automatically completes or converts the entered characters into a full string, and moves the cursor to the next best input position.\r\n\r\n- HTML: Type `<ul` to get `<ul></ul>`, `<block` to get `<blockquote></blockquote>`, etc.\r\n- Usernames: Type `@s` to get `@sun`, `@sl` to get `@slantview`, etc. Only usernames contained on the current page are available.\r\n- Issue URLs: Paste http://drupal.org/node/123456 and hit TAB to get [#123456].\r\n- Comment #IDs: Type #42 and hit TAB to convert it into a link to the corresponding issue comment. #0 links to the OP.\r\n\r\n### Commit message generator\r\nScans an issue for the top contributors and generates a template that follows the documented best practice for commit messages.\r\nAlso allows to select the primary contributor for proper git author attribution.\r\n\r\n### Image attachment embedder\r\nInjects an \"Embed\" button for image attachments to quickly insert uploaded screenshots into an issue follow-up.\r\n\r\nRecommended browser extensions to speed up uploading of file attachments:\r\n\r\n- Chrome: [drag2up](https://chrome.google.com/webstore/detail/bjgjolhpdlgebodaapdafhdnikagbfll)\r\n\r\n## About\r\n\r\n### See also\r\nIf you like this project, you may also like:\r\n\r\n**[drupal.org unleashed](http://userstyles.org/styles/11133) user style**\r\nA user style for advanced drupal.org users. Requires Greasemonkey.\r\n\r\n### APIs and helpers\r\nDreditor additionally contains the following noteworthy components and sub-systems:\r\n\r\n**jQuery.debug()**\r\nAllows to debug and inspect arbitrary data/variables in Firebug's console, but also to access them again in the global window object (optionally using a named identifier, e.g. `window.debug.myValue`). Chainable via jQuery. Especially useful for re-accessing and debugging selected data via Firebug's console. (*now also available via [admin_devel](http://drupal.org/project/admin_menu) module*)\r\n\r\n**jQuery Form API**\r\nInitial stab at building, processing, and rendering jQuery-enabled forms in a JS-only environment. Supports multiple form submit handlers. To be continued.\r\n\r\n## Contributing\r\nDreditor is powered by native JavaScript code.  Simple.\r\n\r\nThe development process is powered by [Node.js](http://nodejs.org) and\r\n[Grunt](http://gruntjs.com). Sounds complex, but is trivial!\r\n\r\nSetting up a local development environment just takes a few minutes; it's all\r\nautomated.\r\n\r\nCheck the [Contributing](https://github.com/dreditor/dreditor/blob/1.x/CONTRIBUTING.md) page to\r\nlearn more.\r\n\r\n## Maintainers\r\n- [Subhojit Paul](https://www.drupal.org/u/subhojit777)\r\n- [Matthew Grill](https://www.drupal.org/u/drpal)\r\n\r\nOriginal author: [Daniel F. Kudwien (sun)](https://drupal.org/user/54136).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}